name: branch_refresh

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main

jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@master

      - name: Name Files
        id: name_file
        run: |
          FILENAME="myoutputfile.txt"
          echo "FILENAME=$FILENAME" >> $GITHUB_ENV

      - name: Install dxtoolkit
        id: install_dxtoolkit
        run: |
          cat $GITHUB_ENV >> ${{ env.FILENAME }}
          ls -ld >> ${{ env.FILENAME }}
          ls -ltr >> ${{ env.FILENAME }}
          cd dxtoolkit2
          chmod 750 ./install.sh
          ./install.sh
          echo "`pwd`" >> ${{ env.FILENAME }}
          ls -ltr >> ${{ env.FILENAME }}
          cd ..
          echo "`pwd`" >> ${{ env.FILENAME }}

  create_data:
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ contains('true',github.event.created) }}
    steps: 
      - name: Execute API create via Shell Script
        id: exec_shell
        run: |
          ./data_ops.sh -a refresh

  refresh_data:
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ contains('false',github.event.created) && contains('false',github.event.deleted)  }}
    steps:
      - name: Execute API refresh via Shell Script
        id: exec_shell
        run: |
          ./data_ops.sh -a refresh
    
  delete_data:
    needs: setup
    runs-on: ubuntu-latest
    if: ${{ contains('true',github.event.deleted) }}
    steps: 
      - name: Execute API delete via Shell Script
        id: exec_shell
        run: |
          ./data_ops.sh -a delete

    
#    finalise:
#      needs: refresh_data
#      runs-on: ubuntu-latest
#      - name: Upload API Output log
#        uses: actions/upload-artifact@v1
#        with:
#          name: apilog
#          path: ${{ env.FILENAME }}
